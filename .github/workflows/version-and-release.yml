name: Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: get version from tag
        id: get_version
        run: |
          realversion="${GITHUB_REF/refs\/tags\//}"
          realversion="${realversion//v/}"
          echo "VERSION=$realversion" >> "$GITHUB_OUTPUT"

      - name: Set up publishing to maven central
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'zulu'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: mvn versions
        run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}

      - name: Install gpg key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Publish redis-om-spring
        working-directory: redis-om-spring
        run: |
          mvn --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase='${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}' \
            -DskipTests deploy -P release
        env:
          MAVEN_USERNAME: ${{secrets.OSSRH_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.OSSRH_TOKEN}}

      - name: Publish redis-om-spring-ai
        working-directory: redis-om-spring-ai
        run: |
          mvn --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase='${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}' \
            -DskipTests deploy -P release
        env:
          MAVEN_USERNAME: ${{secrets.OSSRH_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.OSSRH_TOKEN}}