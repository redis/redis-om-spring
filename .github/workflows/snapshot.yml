---

name: Publish Snapshot

on:
  workflow_dispatch:
  schedule:
    # Run every day at midnight
    - cron: '0 0 * * *'
  push:
    branches:
      - main
    paths-ignore:
      # Don't run on documentation changes
      - '**.md'
      - 'docs/**'

jobs:

  snapshot:
    name: Deploy Snapshot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: om-${{hashFiles('**/pom.xml')}}

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'zulu'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - run: mvn dependency:go-offline

      - run: mvn clean process-test-classes verify

      - name: codecov
        run: |
          curl -s https://raw.githubusercontent.com/codecov/codecov-bash/master/codecov

      - name: Get version and set SNAPSHOT version
        id: get_version
        run: |
          # Get the current version from pom.xml
          BASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # Remove any existing -SNAPSHOT suffix if present
          BASE_VERSION=${BASE_VERSION%-SNAPSHOT}
          
          # Append -SNAPSHOT to create the snapshot version
          SNAPSHOT_VERSION="${BASE_VERSION}-SNAPSHOT"
          
          # Set the version for all modules
          mvn versions:set -DnewVersion="$SNAPSHOT_VERSION" -DgenerateBackupPoms=false
          
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_OUTPUT
          echo "SNAPSHOT_VERSION=$SNAPSHOT_VERSION" >> $GITHUB_OUTPUT
          echo "Base version: $BASE_VERSION, Snapshot version: $SNAPSHOT_VERSION"

      - name: Deploy redis-om-spring SNAPSHOT
        working-directory: redis-om-spring
        run: |
          mvn --no-transfer-progress \
            -DskipTests \
            -Dgpg.passphrase='${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}' \
            deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: Deploy redis-om-spring-ai SNAPSHOT
        working-directory: redis-om-spring-ai
        run: |
          mvn --no-transfer-progress \
            -DskipTests \
            -Dgpg.passphrase='${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}' \
            deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          
      - name: Create Git Tag for Snapshot
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -f "snapshot-${{ steps.get_version.outputs.SNAPSHOT_VERSION }}"
          git push origin "snapshot-${{ steps.get_version.outputs.SNAPSHOT_VERSION }}" --force